version: "3"
name: uhost-v3
services:
  pgsql:
    extends:
      file: support.yml
      service: pgsql

  redis:
    extends:
      file: support.yml
      service: redis

  adminer:
    extends:
      file: support.yml
      service: adminer

  redis-commander:
    extends:
      file: support.yml
      service: redis-commander

  mailhog:
    extends:
      file: support.yml
      service: mailhog

  mongodb:
    extends:
      file: support.yml
      service: mongodb

  elasticsearch:
    extends:
      file: support.yml
      service: elasticsearch

  graylog:
    extends:
      file: support.yml
      service: graylog

  memcached:
    extends:
      file: support.yml
      service: memcached

  sentry-migrations:
    extends:
      file: support.yml
      service: sentry-migrations

  sentry-cron:
    extends:
      file: support.yml
      service: sentry-cron

  sentry-worker:
    extends:
      file: support.yml
      service: sentry-worker

  sentry-web:
    extends:
      file: support.yml
      service: sentry-web

  rabbitmq:
    extends:
      file: support.yml
      service: rabbitmq

  # app builder
  builder:
    image: ucezz/dotnet-sdk:5.0-gdi
    container_name: "${APP_NAME}-builder"
    volumes:
      - ../:/src:ro
      - ../storage:/storage
      - ../out/win:/deploy/win
      - deploy_volume:/deploy
      - build_volume:/build
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
      graylog:
        condition: service_started
    command: >
      bash -c "
      rm -rf /build/back;
      mkdir -p /build/back;
      rsync -vhra /src/ /build/back/ --include='**.gitignore' --exclude='/.git' --exclude='/Frontend' --exclude='/Docker' --exclude='/.vscode' --exclude='*.template' --filter=':- .gitignore' --delete-after;
      cp -pf /src/Uhost.Core/appsettings.docker.json /build/back/Uhost.Core/appsettings.json || exit 1;
      cp -pf /src/Uhost.Console/default-data.json /build/back/Uhost.Console/default-data.json || exit 1;
      cd /build/back;
      dotnet ef database update --project Uhost.Core --context PostgreSqlDbContext || exit 1;
      dotnet ef database update --project Uhost.Core --context PostgreSqlLogDbContext || exit 1;

      rm -rf /deploy/back;
      dotnet publish -r linux-x64 --self-contained true -c Release -o /deploy/back;

      rm -rf /deploy/win/*;
      dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained true -c Release -o /deploy/win Uhost.Console;
      cp -pf /src/Uhost.Core/appsettings.json /deploy/win/appsettings.json || exit 1;

      /deploy/back/Uhost.Console loaddefaultdata --file /deploy/back/default-data.json;
      /deploy/back/Uhost.Console updateseq;
      /deploy/back/Uhost.Console dbvacuum;"
    logging:
      driver: gelf
      options:
        gelf-address: udp://${FORWARD_HOST}:12201
        tag: builder

  # app runner
  app:
    image: ucezz/dotnet-aspnet:5.0-gdi-ffmpeg
    container_name: "${APP_NAME}-app"
    environment:
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
    ports:
      - "${FORWARD_HOST}:${FORWARD_HTTP_PORT}:5000"
    volumes:
      - "../storage:/storage"
      - deploy_volume:/deploy
    working_dir: /deploy/back
    restart: unless-stopped
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      graylog:
        condition: service_started
      builder:
        condition: service_completed_successfully
    entrypoint: ./Uhost.Web
    logging:
      driver: gelf
      options:
        gelf-address: udp://${FORWARD_HOST}:12201
        tag: api

  # frontend builder
  node:
    image: ucezz/node:16.17-rsync-alpine
    container_name: "${APP_NAME}-node"
    volumes:
      - ../Frontend:/src:ro
      - build_volume:/build
      - deploy_volume:/deploy
    environment:
      PUBLIC_URL: "${REACT_PUBLIC_URL}"
    command: >
      bash -c "
      mkdir -p /build/tmp;
      mkdir -p /build/front;
      if [ -d /build/front/node_modules ]; then
        mv -f /build/front/node_modules /build/tmp/node_modules;
      fi;
      rm -rf /build/front/*;
      if [ -d /build/tmp/node_modules ]; then
        mv -f /build/tmp/node_modules /build/front/node_modules;
      fi;

      rsync -vhra /src/ /build/front/ --exclude='node_modules' --exclude='build' --exclude='*.template' --delete;

      cd /build/front;

      npm i;
      npm run build;

      rm -rf /deploy/front;
      mkdir -p /deploy/front;
      rsync -vhrat /build/front/build/ /deploy/front/;
      ls -lag /deploy/front;"
    depends_on:
      - graylog
    logging:
      driver: gelf
      options:
        gelf-address: udp://${FORWARD_HOST}:12201
        tag: node

  # full-stack app
  nginx:
    image: nginx:1.25.2-alpine-slim
    container_name: "${APP_NAME}-nginx"
    restart: unless-stopped
    volumes:
      - deploy_volume:/deploy
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      node:
        condition: service_completed_successfully
      builder:
        condition: service_completed_successfully
    ports:
      - "${FORWARD_HOST}:${FORWARD_NGINX_PORT}:80"
    logging:
      driver: gelf
      options:
        gelf-address: udp://${FORWARD_HOST}:12201
        tag: nginx

volumes:
  build_volume:
  deploy_volume:
  postgres_volume:
  graylog_volume:
  mongo_db_volume:
  mongo_cfg_volume:
  redis_volume:
  elasticsearch_volume:
  sentry_volume:
  rabbitmq_volume:
