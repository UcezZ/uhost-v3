version: "3"
name: uhost-v3
services:
  pgsql:
    extends:
      file: support.yml
      service: pgsql

  redis:
    extends:
      file: support.yml
      service: redis

  adminer:
    extends:
      file: support.yml
      service: adminer

  redis-commander:
    extends:
      file: support.yml
      service: redis-commander

  mailhog:
    extends:
      file: support.yml
      service: mailhog

  mongodb:
    extends:
      file: support.yml
      service: mongodb

  elasticsearch:
    extends:
      file: support.yml
      service: elasticsearch

  graylog:
    extends:
      file: support.yml
      service: graylog

  # app builder
  builder:
    image: ucezz/dotnet-sdk-gdi:5.0
    container_name: "${APP_NAME}-builder"
    volumes:
      - "../:/src"
      - "./appsettings.json:/src/Uhost.Core/appsettings.json"
      - "../storage:/storage"
      - app_volume:/app
    working_dir: /src
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      bash -c "
      rm -rf /app/*;
      dotnet ef database update --project Uhost.Core --context PostgreSqlDbContext;
      dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained true -p:UseAppHost=true -c Release -o /app;
      /app/Uhost.Console loaddefaultdata --file /app/default-data.json"

  # app runner
  app:
    image: ucezz/dotnet-aspnet-gdi:5.0
    container_name: "${APP_NAME}-app"
    environment:
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
    ports:
      - "${FORWARD_HOST}:${FORWARD_HTTP_PORT}:5000"
    volumes:
      - "../storage:/storage"
      - app_volume:/app
    working_dir: /app
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
      builder:
        condition: service_completed_successfully
    entrypoint: ./Uhost.Web

volumes:
  app_volume:
  postgres_volume:
  graylog_volume:
  mongo_db_volume:
  mongo_cfg_volume:
  redis_volume:
  elasticsearch_volume:
