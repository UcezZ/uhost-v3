version: "3"
name: uhost-v3
services:
  pgsql:
    extends:
      file: deploy.yml
      service: pgsql

  redis:
    extends:
      file: deploy.yml
      service: redis

  adminer:
    extends:
      file: deploy.yml
      service: adminer

  redis-commander:
    extends:
      file: deploy.yml
      service: redis-commander

  mailhog:
    extends:
      file: deploy.yml
      service: mailhog

  backend-deploy:
    extends:
      file: deploy.yml
      service: backend-deploy

  backend:
    extends:
      file: deploy.yml
      service: backend
    environment:
      BACKEND_USE_GRAYLOG: true
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"

  postgres-exporter:
    container_name: "${APP_NAME}-postgres-exporter"
    image: wrouesnel/postgres_exporter:latest
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DATA_SOURCE_NAME: "postgresql://${PGSQL_USERNAME}:${PGSQL_PASSWORD}@pgsql:5432/${PGSQL_DATABASE}?sslmode=disable"
    ports:
      - 9187:9187

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: "${APP_NAME}-prometheus"
    restart: unless-stopped
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus.yml
      - prometheus_volume:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "${FORWARD_HOST}:${FORWARD_PROMETHEUS_PORT}:9090"

  grafana:
    image: grafana/grafana:9.2.10
    container_name: "${APP_NAME}-grafana"
    depends_on:
      - pgsql
      - postgres-exporter
    links:
      - pgsql
      - postgres-exporter
    ports:
      - "${FORWARD_HOST}:${FORWARD_GRAFANA_PORT}:3000"

  # Mongo DB
  mongodb:
    container_name: "${APP_NAME}-mongo"
    image: mongo:3
    restart: unless-stopped
    volumes:
      - mongo_db_volume:/data/db
      - mongo_cfg_volume:/data/configdb

  elasticsearch:
    container_name: "${APP_NAME}-elasticsearch"
    image: elasticsearch:5.6.3
    restart: unless-stopped
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_volume:/usr/share/elasticsearch/data

  graylog:
    container_name: "${APP_NAME}-graylog"
    image: graylog/graylog:2.4.0-1
    restart: unless-stopped
    environment:
      # CHANGE ME!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_WEB_ENDPOINT_URI=http://${FORWARD_HOST}:${FORWARD_GRAYLOG_PORT}/api
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # HTTP
      - ${FORWARD_GRAYLOG_PORT}:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    volumes:
      - "graylog_volume:/usr/share/graylog/data"

volumes:
  build_volume:
  deploy_volume:
  postgres_volume:
  graylog_volume:
  mongo_db_volume:
  mongo_cfg_volume:
  redis_volume:
  elasticsearch_volume:
  prometheus_volume:
