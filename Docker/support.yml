version: "3.3"
services:
  # PostgreSql
  pgsql:
    image: postgres:14-alpine
    container_name: "${APP_NAME}-pgsql"
    restart: unless-stopped
    environment:
      PGPASSWORD: "${PGSQL_PASSWORD}"
      POSTGRES_DB: "${PGSQL_DATABASE}"
      POSTGRES_USER: "${PGSQL_USERNAME}"
      POSTGRES_PASSWORD: "${PGSQL_PASSWORD}"
      POSTGRES_DB_SCHEMA: "${PGSQL_SCHEMA}"
    ports:
      - "${FORWARD_HOST}:${FORWARD_PGSQL_PORT}:5432"
    volumes:
      - "./pginit.sh:/docker-entrypoint-initdb.d/init.sh"
      - db_volume:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${PGSQL_DATABASE}",
          "-U",
          "${PGSQL_USERNAME}",
        ]
      retries: 3
      timeout: 10s

  # Redis
  redis:
    image: redis:6.0-alpine
    container_name: "${APP_NAME}-redis"
    restart: unless-stopped
    ports:
      - "${FORWARD_HOST}:${FORWARD_REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 10s

  # Postgres Web UI
  adminer:
    image: adminer
    container_name: "${APP_NAME}-adminer"
    restart: always
    ports:
      - "${FORWARD_HOST}:${FORWARD_ADMINER_PORT}:8080"
    depends_on:
      - pgsql
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_SERVER: pgsql
      ADMINER_DESIGN: hever
      ADMINER_DEFAULT_DB_NAME: "${PGSQL_DATABASE}"

  # Redis Web UI
  redis-commander:
    container_name: "${APP_NAME}-redis-cmdr"
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379:${REDIS_DB_NUM}
    ports:
      - "${FORWARD_HOST}:${FORWARD_REDIS_CMDR_PORT}:8081"

  # Mailhog
  mailhog:
    image: mailhog/mailhog:latest
    container_name: "${APP_NAME}-mailhog"
    restart: unless-stopped
    ports:
      - "${FORWARD_HOST}:${FORWARD_MAILHOG_PORT}:1025"
      - "${FORWARD_HOST}:${FORWARD_MAILHOG_DASHBOARD_PORT}:8025"

volumes:
  db_volume:
